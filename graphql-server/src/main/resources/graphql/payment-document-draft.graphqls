type PaymentDocumentDraft {
    draft: Draft,
    checksResp: ChecksResp
}

type Draft {
    id: ID,
    payeeAccount: String,
    payerAccount: String,
    sum: Float
}

#input InputDraft {
#    id: ID,
#    payeeAccount: String,
#    payerAccount: String,
#    sum: Float
#}

type ChecksResp {
    res: [CheckFieldRes]
}

type CheckFieldRes {
    filedName: String,
    checkRes: String
}

type Query {
    drafts(count: Int): [Draft]
    draft(id: ID): Draft
#    draftCheck(draft: InputDraft): ChecksResp
}

type Mutation {
    createDraft(payeeAccount: String!, payerAccount: String!, sum: Float!): Draft
}